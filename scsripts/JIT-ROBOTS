#!/bin/bash

# Define colors for formatting output
HEADER='\033[1;35m'
OKBLUE='\033[94m'
OKCYAN='\033[96m'
OKCYANL='\033[1;36m'
OKGREEN='\033[92m'
OKGREENL='\033[1;32m' 
OKREDL='\033[1;31m' 
WARNING='\033[93m'
FAIL='\033[91m'
ENDC='\033[0m'
BOLD='\033[1m'
UNDERLINE='\033[4m'

banner() {
    echo -e "${HEADER}"
    cat << "EOF"
     _ ___ _____     ____   ___  ____   ___ _____ ____  
    | |_ _|_   _|   |  _ \ / _ \| __ ) / _ \_   _/ ___| 
 _  | || |  | |_____| |_) | | | |  _ \| | | || | \___ \ 
| |_| || |  | |_____|  _ <| |_| | |_) | |_| || |  ___) |
 \___/|___| |_|     |_| \_\\___/|____/ \___/ |_| |____/  
EOF
    echo -e "${ENDC}"
}

getRobots() {
    domain="$1"
    enable_save="$2"
    filename="$3"

    echo -e "${OKCYAN}Starting RobotScraper to recollect directories and pages from ${WARNING}robots.txt ${OKCYAN}in ${FAIL}$domain${ENDC}"
    echo -e "${OKCYAN}[+] Checking if the${WARNING} robots.txt ${OKCYAN}file exists${ENDC}"

    # Check if robots.txt exists
    response=$(curl --write-out %{http_code} --silent --output /dev/null "https://$domain/robots.txt")
    if [ "$response" == "200" ]; then
        echo -e "${OKCYAN}[✓] File${WARNING} robots.txt ${OKCYAN}exists:${ENDC}"
        echo

        # Download robots.txt
        curl -s "https://$domain/robots.txt" > JIT-ROBOTS.txt

        # Parse robots.txt and process directories
        while IFS= read -r line; do
            if [[ "$line" =~ ^(Allow|Disallow): ]]; then
                directory=$(echo "$line" | cut -d ' ' -f2)
                if [[ "${directory:0:1}" == "/" ]]; then
                    echo -n -e "${OKCYAN}[+] Checking ${WARNING}$directory${ENDC}"
                    if curl --output /dev/null --silent --head --fail "https://$domain$directory"; then
                        echo -e "${OKGREEN}[✓] Directory exists: ${WARNING}$directory${ENDC}"
                        if [[ "$enable_save" -eq 1 ]]; then
                            echo "$directory" >> "$filename"
                        fi
                    else
                        echo -e "${FAIL}[✗] Directory does not exist: ${WARNING}$directory${ENDC}"
                    fi
                fi
            fi
        done < JIT-ROBOTS.txt
    else
        echo -e "${FAIL}ERROR: No robots.txt file found.${ENDC}"
    fi
}

main() {
    banner
    enable_save=0
    filename=""

    if [[ $# -eq 0 ]]; then
        echo -e "${FAIL}ERROR: No domain or parameters found${ENDC}"
    elif [[ "$1" == "-h" || "$1" == "--help" ]]; then
        echo -e "${BOLD}HELP SECTION:${ENDC}"
        echo -e "Usage:${OKCYAN}\trobotscraper.sh domain${ENDC}"
        echo -e "Example:${OKCYAN}\trobotscraper.sh example.com -s output.txt${ENDC}"
        echo -e "-d,--domain${OKCYAN}\tSpecifies the domain${ENDC}"
        echo -e "-h,--help${OKCYAN}\tThis help${ENDC}"
        echo -e "-v,--version${OKCYAN}\tShow version${ENDC}"
        echo -e "-s,--save${OKCYAN}\tEnable save output and specifies the output file${ENDC}"
    elif [[ "$1" == "-v" || "$1" == "--version" ]]; then
        echo -e "${WARNING}RobotScraper v.1.0${ENDC}"
    elif [[ $# -gt 1 && $# -le 4 ]]; then
        if [[ "$1" == "-d" || "$1" == "--domain" ]]; then
            domain="$2"
            if [[ $# -gt 2 ]]; then
                if [[ "$3" == "-s" || "$3" == "--save" ]]; then
                    enable_save=1
                    filename="$4"
                fi
            fi
            getRobots "$domain" "$enable_save" "$filename"
        else
            echo -e "${FAIL}ERROR: Incorrect argument or syntax${ENDC}"
        fi
    fi
}

main "$@"
